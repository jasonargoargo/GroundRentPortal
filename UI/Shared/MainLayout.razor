@inherits LayoutComponentBase
@namespace UI.Shared
<PageTitle>Ground Rent Portal</PageTitle>
<MudThemeProvider @bind-IsDarkMode="_isDarkMode" Theme="MainTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>	
	<MudAppBar>		
		<MudIconButton Style="color: white;" Icon="@Icons.Filled.Menu" OnClick="() => _isNavigationMenuOpened = !_isNavigationMenuOpened" />
		<MudText Typo="Typo.h5">Ground Rent Portal</MudText>		
	</MudAppBar>
	<NavigationMenuDrawer IsDrawerOpen="_isNavigationMenuOpened" OnIsDarkTheme="UpdateIsDarkTheme" />
	<MudMainContent>		
		@Body
	</MudMainContent>
</MudLayout>

@code {
	private bool _isDarkMode;
	private MudThemeProvider? _mudThemeProvider;
	private bool _isNavigationMenuOpened { get; set; } = true;

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender && _mudThemeProvider is not null)
		{
			_isDarkMode = await _mudThemeProvider.GetSystemPreference();
			StateHasChanged();
		}
	}

	private void UpdateIsDarkTheme(bool value)
	{
		_isDarkMode = value;
	}

	MudTheme MainTheme = new MudTheme()
		{
			Palette = new Palette()
			{				
				Primary = "#be894a",
				Secondary = "#4d4d4d",
				AppbarBackground = "#be894a",
			},
			PaletteDark = new PaletteDark()
			{
				Primary = "#959595",
				Secondary = "#000000",
				TextPrimary = "#fff",				
				TextSecondary = "#fff",
				AppbarText = "#fff",
				AppbarBackground = "#333333"
			},
			LayoutProperties = new LayoutProperties()
			{
				DrawerWidthLeft = "260px",
				DrawerWidthRight = "300px"
			}
		};
}