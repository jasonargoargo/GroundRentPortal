@namespace UI.Shared

<MudDrawer Open="IsDrawerOpen" @ontouchend="() => IsDrawerOpen = !IsDrawerOpen">
	<div class="navigation-container">
		<LoginDisplay />
		<MudText Class="ml-2" Typo="Typo.body2">Dark Theme:</MudText>
		<MudTooltip Text="Requires mid-theme to be disabled." ShowOnHover="IsDarkThemeDisabled" ShowOnFocus="false" Placement="Placement.End" >
			<MudSwitch Class="ml-2" Checked="HasDetectedDarkTheme" CheckedChanged="OnIsDarkTheme"
				Color="Color.Secondary" Disabled="IsDarkThemeDisabled" />
		</MudTooltip>
		<MudText Class="ml-2" Typo="Typo.body2">Mid-Theme:</MudText>
		<MudTooltip ShowOnHover="IsMidThemeDisabled" ShowOnFocus="false" Placement="Placement.End" Text="Requires dark theme to be Disabled">
			<MudSwitch Class="ml-2" CheckedChanged="OnMudThemeChanged" Color="Color.Secondary" Disabled="IsMidThemeDisabled" />
		</MudTooltip>
		<MudButton Class="ml-2" StartIcon="@Icons.Filled.Home" Color="Color.Primary" Href="/">Home</MudButton>
		<MudButton Class="ml-2" StartIcon="@Icons.Filled.LocationOn" Color="Color.Primary" Href="processaddress">Process Address</MudButton>
	</div>
</MudDrawer>

@code {
	[Parameter]
	public bool IsDrawerOpen { get; set; }
	[Parameter]
	public EventCallback<bool> OnIsDarkTheme { get; set; }
	[Parameter]
	public EventCallback<bool> OnMudThemeChanged { get; set; }
	[Parameter]
	public bool IsDarkThemeDisabled { get; set; }
	[Parameter]
	public bool IsMidThemeDisabled { get; set; }
	[Parameter]
	public bool HasDetectedDarkTheme { get; set; }
}
