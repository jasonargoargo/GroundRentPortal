@using DataLibrary.Models
@namespace UI.Pages.ProcessAddressComponents

@if (AddressToBeInputModel is not null && AddressToBeInputModel.GroundRentPaymentFrequency == AddressModel.PaymentFrequency.Annual)
{
	<div class="col gy-3" style="max-width: fit-content;">
		<label>Annual Date</label>
		<MudDatePicker @bind-Date="AddressToBeInputModel.PaymentDateAnnual" PickerVariant="PickerVariant.Static" For="@(() => AddressToBeInputModel.PaymentDateAnnual)" Required />
	</div>
}

@if (AddressToBeInputModel is not null && AddressToBeInputModel.GroundRentPaymentFrequency == AddressModel.PaymentFrequency.SemiAnnual)
{
	<div class="col gy-3" style="max-width: fit-content;">
		<label>Semi-Annual 1 Date</label>
		<MudDatePicker @bind-Date="AddressToBeInputModel.PaymentDateSemiAnnual1" PickerVariant="PickerVariant.Static" For="@(() => AddressToBeInputModel.PaymentDateSemiAnnual1)" Required />
	</div>
	<div class="col gy-3" style="max-width: fit-content;">
		<label>Semi-Annual 2 Date</label>
		<MudDatePicker @bind-Date="AddressToBeInputModel.PaymentDateSemiAnnual2" PickerVariant="PickerVariant.Static" For="@(() => AddressToBeInputModel.PaymentDateSemiAnnual2)" Required />
	</div>
}

@if (AddressToBeInputModel is not null && AddressToBeInputModel.GroundRentPaymentFrequency == AddressModel.PaymentFrequency.Quarterly)
{
	<div class="col gy-3" style="max-width: fit-content;">
		<label>Quarterly 1 Date</label>
		<MudDatePicker @bind-Date="AddressToBeInputModel.PaymentDateQuarterly1" PickerVariant="PickerVariant.Static" For="@(() => AddressToBeInputModel.PaymentDateQuarterly1)" Required />
	</div>
	<div class="col gy-3" style="max-width: fit-content;">
		<label>Quarterly 2 Date</label>
		<MudDatePicker @bind-Date="AddressToBeInputModel.PaymentDateQuarterly2" PickerVariant="PickerVariant.Static" For="@(() => AddressToBeInputModel.PaymentDateQuarterly2)" Required />
	</div>
	<div class="col gy-3" style="max-width: fit-content;">
		<label>Quarterly 3 Date</label>
		<MudDatePicker @bind-Date="AddressToBeInputModel.PaymentDateQuarterly3" PickerVariant="PickerVariant.Static" For="@(() => AddressToBeInputModel.PaymentDateQuarterly3)" Required />
	</div>
	<div class="col gy-3" style="max-width: fit-content;">
		<label>Quarterly 4 Date</label>
		<MudDatePicker @bind-Date="AddressToBeInputModel.PaymentDateQuarterly4" PickerVariant="PickerVariant.Static" For="@(() => AddressToBeInputModel.PaymentDateQuarterly4)" Required />
	</div>
}

@if (AddressToBeInputModel is not null && AddressToBeInputModel.GroundRentPaymentFrequency == AddressModel.PaymentFrequency.Other)
{
	<div class="col gy-3" style="max-width: 15em;">
		<label>Other Date</label>
		<MudInputString Variant="Variant.Filled" @bind-Value="AddressToBeInputModel.PaymentDateOther" For="@(() => AddressToBeInputModel.PaymentDateOther)" Required />
	</div>
}

@code {
	[CascadingParameter]
	public AddressModel? AddressToBeInputModel { get; set; }
}
