@using DataLibrary.Models
@namespace UI.Pages.ProcessAddressComponents

<div class="col gy-3">
	<MudText>Payment Frequency</MudText>
	@if (AddressToBeInputModel is not null)
	{
		<MudSelect T="AddressModel.PaymentFrequency?" Adornment="Adornment.Start" AdornmentIcon="@Icons.Filled.MonitorHeart" Variant="Variant.Outlined" ValueChanged="OnPaymentFrequencyChanged" Placeholder="Annual"
			   Style="max-width: fit-content;" Dense="true" For="@(() => AddressToBeInputModel.GroundRentPaymentFrequency)" Required>
			<MudSelectItem T="AddressModel.PaymentFrequency?" Value="@AddressModel.PaymentFrequency.Annual">Annual</MudSelectItem>
			<MudSelectItem T="AddressModel.PaymentFrequency?" Value="@AddressModel.PaymentFrequency.SemiAnnual">Semi-Annual</MudSelectItem>
			<MudSelectItem T="AddressModel.PaymentFrequency?" Value="@AddressModel.PaymentFrequency.Quarterly">Quarterly</MudSelectItem>
			@*<MudSelectItem T="AddressModel.PaymentFrequency?" Value="@AddressModel.PaymentFrequency.Other">Other</MudSelectItem>*@
		</MudSelect>
	}
</div>

<CascadingValue Value="AddressToBeInputModel">
	<DateFrequencyPicker />
</CascadingValue>

@code {	
	[CascadingParameter]
	public AddressModel? AddressToBeInputModel { get; set; }
	// EventCallback Parameter sent to parent ProcessAddress.Razor to process PaymentFrequencySelection
	[Parameter]
	public EventCallback<AddressModel.PaymentFrequency?> OnPaymentFrequencyChanged { get; set; }

	protected override void OnInitialized()
	{
		if (AddressToBeInputModel is not null)
		{
			AddressToBeInputModel.GroundRentPaymentFrequency = null;
		}
		base.OnInitialized();
	}
}
